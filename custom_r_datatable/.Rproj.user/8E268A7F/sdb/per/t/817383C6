{
    "collab_server" : "",
    "contents" : "#\n# 02_functions.R\n#\n# Utility functions for microsimulation\n#\n# Reed Sorensen\n# May 2016\n#\n\n\n\nrate2prob <- function(x, time_length = 1) {\n\n  # Convert all rates to probabilities in a given data table,\n  #   according to: prob = 1 - exp(-rate * time_length)\n  # The unit for time_length is years\n\n  require(data.table)\n  # x <- rates; time_length = 1 # dev variables\n\n  if (!is.data.table(x)) stop(\"'x' must be in data.table format\")\n\n  rate_names <- names(x)[grepl(\"rate_\", names(x))]\n  for (nm in rate_names) { x[, (nm) := 1 - exp(-get(nm) * time_length)] }\n  names(x)[names(x) %in% rate_names] <- gsub(\"rate_\", \"prob_\", rate_names)\n\n  return(x)\n\n}\n\n\n# add_costs_dalys <- function(\n#   x, disability_states = NULL, disability_weights = NULL, seed = 123) {\n#\n#   sims2 <- x %>%\n#     as.data.frame(.) %>%\n#     mutate(\n#       age_at_death = str_count(died_history, \"0\") + age_start) %>%\n#     left_join(life_table, by = c(\"age_at_death\" = \"age\")) %>%\n#     mutate(\n#       yll = ifelse(died == 1, yll, 0),\n#       yld = 0,\n#       daly = yll + yld) %>%\n#     group_by(.) %>%\n#     dplyr::summarize(\n#       daly = sum(daly),\n#       cost = sum(cost)\n#     )\n#\n#   return(sims2)\n#\n# }\n\n\nsummarize_results <- function(x, d_weights, seed = 123) {\n\n  require(stringr)\n  # x <- sims; d_weights <- disability_weights # dev variables\n\n  sims2 <- x %>%\n    as.data.frame(.) %>%\n    mutate(\n      age_at_death = str_count(died_history, \"0\") + age_start) %>%\n    left_join(life_table, by = c(\"age_at_death\" = \"age\")) %>%\n    mutate(\n      yll = ifelse(died == 1, yll, 0),\n      yld = 0 )\n\n  for (num in d_weights$id_number) {\n\n    # num <- 1 # dev variable\n\n    wt <- d_weights[id_number == num, weight]\n    num <- as.character(num)\n\n    sims2 <- sims2 %>%\n      mutate(yld = yld + str_count(disability_state_history, num) * wt)\n  }\n\n  sims2 <- sims2 %>%\n    mutate(\n      daly = yll + yld,\n      any_ihd = ifelse(str_count(ihd, \"1\") > 0, 1, 0) ) %>%\n    summarize(\n      daly = sum(daly),\n      yll = sum(yll),\n      yld = sum(yld),\n      cost = sum(cost),\n      any_ihd = sum(any_ihd)\n    )\n\n  return(sims2)\n}\n\n\n\nget_ICER <- function(seed = 123, check_ihd = FALSE) {\n\n  x1 <- run_microsim(intervention = FALSE, seed = seed)\n  yll_control <- x1[[\"yll\"]]\n  yld_control <- x1[[\"yld\"]]\n  daly_control <- x1[[\"daly\"]]\n  cost_control <- x1[[\"cost\"]]\n\n  x2 <- run_microsim(intervention = TRUE, seed = seed)\n  yll_int <- x2[[\"yll\"]]\n  yld_int <- x2[[\"yld\"]]\n  daly_int <- x2[[\"daly\"]]\n  cost_int <- x2[[\"cost\"]]\n\n  icer <- abs((cost_int - cost_control) / (daly_int - daly_control))\n  icer_yld <- abs((cost_int - cost_control) / (yld_int - yld_control))\n  cost_diff <- abs(cost_int - cost_control)\n  daly_diff <- abs(daly_int - daly_control)\n\n  out <- round(c(cost_diff, daly_diff, icer, icer_yld), digits = 2)\n  names(out) <- c(\"cost_diff\", \"daly_diff\", \"icer\", \"icer_yld\")\n\n  if (check_ihd) {\n    out <- append(out, c(ihd_int = x2[[\"any_ihd\"]], ihd_control = x1[[\"any_ihd\"]]) )\n  }\n\n  return(out)\n\n}\n\n\ncat(\"Loaded functions:\n  rate2prob\n  summarize_results\n  get_ICER\"\n)\n\n",
    "created" : 1497049478609.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3157694212",
    "id" : "817383C6",
    "lastKnownWriteTime" : 1495926108,
    "last_content_update" : 1495926108,
    "path" : "~/prog/projects/hello_world_paper/microsim_datatable_reed/02_functions.R",
    "project_path" : "02_functions.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}